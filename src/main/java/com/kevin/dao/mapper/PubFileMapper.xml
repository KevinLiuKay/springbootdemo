<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kevin.dao.mapper.PubFileMapper" >
  <resultMap id="BaseResultMap" type="com.kevin.model.PubFile" >
    <id column="file_id" property="fileId" jdbcType="VARCHAR" />
    <result column="file_name" property="fileName" jdbcType="VARCHAR" />
    <result column="file_remark" property="fileRemark" jdbcType="VARCHAR" />
    <result column="file_typeId" property="fileTypeid" jdbcType="VARCHAR" />
    <result column="file_suffix" property="fileSuffix" jdbcType="VARCHAR" />
    <result column="file_size" property="fileSize" jdbcType="DOUBLE" />
    <result column="file_path" property="filePath" jdbcType="VARCHAR" />
    <result column="record_state" property="recordState" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user_id" property="updateUserId" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    file_id, file_name, file_remark, file_typeId, file_suffix, file_size, file_path, 
    record_state, create_user_id, create_time, update_user_id, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.kevin.model.PubFileExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pub_file
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from pub_file
    where file_id = #{fileId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from pub_file
    where file_id = #{fileId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.kevin.model.PubFileExample" >
    delete from pub_file
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kevin.model.PubFile" >
    insert into pub_file (file_id, file_name, file_remark, 
      file_typeId, file_suffix, file_size, 
      file_path, record_state, create_user_id, 
      create_time, update_user_id, update_time
      )
    values (#{fileId,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, #{fileRemark,jdbcType=VARCHAR}, 
      #{fileTypeid,jdbcType=VARCHAR}, #{fileSuffix,jdbcType=VARCHAR}, #{fileSize,jdbcType=DOUBLE}, 
      #{filePath,jdbcType=VARCHAR}, #{recordState,jdbcType=VARCHAR}, #{createUserId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kevin.model.PubFile" >
    insert into pub_file
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fileId != null" >
        file_id,
      </if>
      <if test="fileName != null" >
        file_name,
      </if>
      <if test="fileRemark != null" >
        file_remark,
      </if>
      <if test="fileTypeid != null" >
        file_typeId,
      </if>
      <if test="fileSuffix != null" >
        file_suffix,
      </if>
      <if test="fileSize != null" >
        file_size,
      </if>
      <if test="filePath != null" >
        file_path,
      </if>
      <if test="recordState != null" >
        record_state,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fileId != null" >
        #{fileId,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null" >
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileRemark != null" >
        #{fileRemark,jdbcType=VARCHAR},
      </if>
      <if test="fileTypeid != null" >
        #{fileTypeid,jdbcType=VARCHAR},
      </if>
      <if test="fileSuffix != null" >
        #{fileSuffix,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null" >
        #{fileSize,jdbcType=DOUBLE},
      </if>
      <if test="filePath != null" >
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="recordState != null" >
        #{recordState,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kevin.model.PubFileExample" resultType="java.lang.Integer" >
    select count(*) from pub_file
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pub_file
    <set >
      <if test="record.fileId != null" >
        file_id = #{record.fileId,jdbcType=VARCHAR},
      </if>
      <if test="record.fileName != null" >
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.fileRemark != null" >
        file_remark = #{record.fileRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.fileTypeid != null" >
        file_typeId = #{record.fileTypeid,jdbcType=VARCHAR},
      </if>
      <if test="record.fileSuffix != null" >
        file_suffix = #{record.fileSuffix,jdbcType=VARCHAR},
      </if>
      <if test="record.fileSize != null" >
        file_size = #{record.fileSize,jdbcType=DOUBLE},
      </if>
      <if test="record.filePath != null" >
        file_path = #{record.filePath,jdbcType=VARCHAR},
      </if>
      <if test="record.recordState != null" >
        record_state = #{record.recordState,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserId != null" >
        update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pub_file
    set file_id = #{record.fileId,jdbcType=VARCHAR},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      file_remark = #{record.fileRemark,jdbcType=VARCHAR},
      file_typeId = #{record.fileTypeid,jdbcType=VARCHAR},
      file_suffix = #{record.fileSuffix,jdbcType=VARCHAR},
      file_size = #{record.fileSize,jdbcType=DOUBLE},
      file_path = #{record.filePath,jdbcType=VARCHAR},
      record_state = #{record.recordState,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kevin.model.PubFile" >
    update pub_file
    <set >
      <if test="fileName != null" >
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileRemark != null" >
        file_remark = #{fileRemark,jdbcType=VARCHAR},
      </if>
      <if test="fileTypeid != null" >
        file_typeId = #{fileTypeid,jdbcType=VARCHAR},
      </if>
      <if test="fileSuffix != null" >
        file_suffix = #{fileSuffix,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null" >
        file_size = #{fileSize,jdbcType=DOUBLE},
      </if>
      <if test="filePath != null" >
        file_path = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="recordState != null" >
        record_state = #{recordState,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where file_id = #{fileId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kevin.model.PubFile" >
    update pub_file
    set file_name = #{fileName,jdbcType=VARCHAR},
      file_remark = #{fileRemark,jdbcType=VARCHAR},
      file_typeId = #{fileTypeid,jdbcType=VARCHAR},
      file_suffix = #{fileSuffix,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=DOUBLE},
      file_path = #{filePath,jdbcType=VARCHAR},
      record_state = #{recordState,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where file_id = #{fileId,jdbcType=VARCHAR}
  </update>
</mapper>