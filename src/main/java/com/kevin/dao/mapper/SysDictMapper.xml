<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kevin.dao.mapper.SysDictMapper" >
  <resultMap id="BaseResultMap" type="com.kevin.model.SysDict" >
    <id column="dict_id" property="dictId" jdbcType="VARCHAR" />
    <result column="dict_type_id" property="dictTypeId" jdbcType="VARCHAR" />
    <result column="dict_type_name" property="dictTypeName" jdbcType="VARCHAR" />
    <result column="dict_key" property="dictKey" jdbcType="VARCHAR" />
    <result column="dict_value" property="dictValue" jdbcType="VARCHAR" />
    <result column="dict_desc" property="dictDesc" jdbcType="VARCHAR" />
    <result column="sort_key" property="sortKey" jdbcType="INTEGER" />
    <result column="record_state" property="recordState" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user_id" property="updateUserId" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    dict_id, dict_type_id, dict_type_name, dict_key, dict_value, dict_desc, sort_key, 
    record_state, create_user_id, create_time, update_user_id, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.kevin.model.SysDictExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_dict
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_dict
    where dict_id = #{dictId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sys_dict
    where dict_id = #{dictId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.kevin.model.SysDictExample" >
    delete from sys_dict
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kevin.model.SysDict" >
    insert into sys_dict (dict_id, dict_type_id, dict_type_name, 
      dict_key, dict_value, dict_desc, 
      sort_key, record_state, create_user_id, 
      create_time, update_user_id, update_time
      )
    values (#{dictId,jdbcType=VARCHAR}, #{dictTypeId,jdbcType=VARCHAR}, #{dictTypeName,jdbcType=VARCHAR}, 
      #{dictKey,jdbcType=VARCHAR}, #{dictValue,jdbcType=VARCHAR}, #{dictDesc,jdbcType=VARCHAR}, 
      #{sortKey,jdbcType=INTEGER}, #{recordState,jdbcType=VARCHAR}, #{createUserId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kevin.model.SysDict" >
    insert into sys_dict
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="dictId != null" >
        dict_id,
      </if>
      <if test="dictTypeId != null" >
        dict_type_id,
      </if>
      <if test="dictTypeName != null" >
        dict_type_name,
      </if>
      <if test="dictKey != null" >
        dict_key,
      </if>
      <if test="dictValue != null" >
        dict_value,
      </if>
      <if test="dictDesc != null" >
        dict_desc,
      </if>
      <if test="sortKey != null" >
        sort_key,
      </if>
      <if test="recordState != null" >
        record_state,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="dictId != null" >
        #{dictId,jdbcType=VARCHAR},
      </if>
      <if test="dictTypeId != null" >
        #{dictTypeId,jdbcType=VARCHAR},
      </if>
      <if test="dictTypeName != null" >
        #{dictTypeName,jdbcType=VARCHAR},
      </if>
      <if test="dictKey != null" >
        #{dictKey,jdbcType=VARCHAR},
      </if>
      <if test="dictValue != null" >
        #{dictValue,jdbcType=VARCHAR},
      </if>
      <if test="dictDesc != null" >
        #{dictDesc,jdbcType=VARCHAR},
      </if>
      <if test="sortKey != null" >
        #{sortKey,jdbcType=INTEGER},
      </if>
      <if test="recordState != null" >
        #{recordState,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kevin.model.SysDictExample" resultType="java.lang.Integer" >
    select count(*) from sys_dict
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_dict
    <set >
      <if test="record.dictId != null" >
        dict_id = #{record.dictId,jdbcType=VARCHAR},
      </if>
      <if test="record.dictTypeId != null" >
        dict_type_id = #{record.dictTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.dictTypeName != null" >
        dict_type_name = #{record.dictTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.dictKey != null" >
        dict_key = #{record.dictKey,jdbcType=VARCHAR},
      </if>
      <if test="record.dictValue != null" >
        dict_value = #{record.dictValue,jdbcType=VARCHAR},
      </if>
      <if test="record.dictDesc != null" >
        dict_desc = #{record.dictDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.sortKey != null" >
        sort_key = #{record.sortKey,jdbcType=INTEGER},
      </if>
      <if test="record.recordState != null" >
        record_state = #{record.recordState,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserId != null" >
        update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_dict
    set dict_id = #{record.dictId,jdbcType=VARCHAR},
      dict_type_id = #{record.dictTypeId,jdbcType=VARCHAR},
      dict_type_name = #{record.dictTypeName,jdbcType=VARCHAR},
      dict_key = #{record.dictKey,jdbcType=VARCHAR},
      dict_value = #{record.dictValue,jdbcType=VARCHAR},
      dict_desc = #{record.dictDesc,jdbcType=VARCHAR},
      sort_key = #{record.sortKey,jdbcType=INTEGER},
      record_state = #{record.recordState,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kevin.model.SysDict" >
    update sys_dict
    <set >
      <if test="dictTypeId != null" >
        dict_type_id = #{dictTypeId,jdbcType=VARCHAR},
      </if>
      <if test="dictTypeName != null" >
        dict_type_name = #{dictTypeName,jdbcType=VARCHAR},
      </if>
      <if test="dictKey != null" >
        dict_key = #{dictKey,jdbcType=VARCHAR},
      </if>
      <if test="dictValue != null" >
        dict_value = #{dictValue,jdbcType=VARCHAR},
      </if>
      <if test="dictDesc != null" >
        dict_desc = #{dictDesc,jdbcType=VARCHAR},
      </if>
      <if test="sortKey != null" >
        sort_key = #{sortKey,jdbcType=INTEGER},
      </if>
      <if test="recordState != null" >
        record_state = #{recordState,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where dict_id = #{dictId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kevin.model.SysDict" >
    update sys_dict
    set dict_type_id = #{dictTypeId,jdbcType=VARCHAR},
      dict_type_name = #{dictTypeName,jdbcType=VARCHAR},
      dict_key = #{dictKey,jdbcType=VARCHAR},
      dict_value = #{dictValue,jdbcType=VARCHAR},
      dict_desc = #{dictDesc,jdbcType=VARCHAR},
      sort_key = #{sortKey,jdbcType=INTEGER},
      record_state = #{recordState,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where dict_id = #{dictId,jdbcType=VARCHAR}
  </update>
</mapper>